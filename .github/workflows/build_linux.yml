name: Build Linux

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  MAX_CACHE_FILE_COUNT: 1000

jobs:
  build:
    strategy:
       matrix:
         compiler: [g++-11, clang++-12]
         os: [ubuntu-20.04]

    runs-on: ${{ matrix.os }} 
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2

    - name: Install gcc-11
      if: ${{matrix.compiler == 'g++-11'}}
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install gcc-11 g++-11
    
    - name: Install libc++12
      if: ${{matrix.compiler == 'clang++-12'}}
      run: |
        sudo apt update
        sudo apt-get install -y libc++-12-dev libc++abi-12-dev

    - name: Install dependencies from apt
      run: sudo apt-get install libboost-dev
    
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build
    
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      env:
        CXX: ${{ matrix.compiler }}
      working-directory: ${{runner.workspace}}/build
      run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
